{"version":3,"file":"static/js/22.b369fd4a.chunk.js","mappings":"+NA6EA,UAxEiB,WAAO,IAAD,IACrB,GAAkCA,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAEMC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACL,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAG3DC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEDC,EAAAA,EAAAA,IAAaZ,GAFZ,OAEda,EAFc,OAGpBd,EAAac,GACbR,GAAW,GAJS,gDAMpBS,QAAQC,MAAR,MACAV,GAAW,GAPS,yDAAH,qDAWrBM,GACD,GAAE,CAACX,IACJ,IACEgB,EAMElB,EANFkB,eACAC,EAKEnB,EALFmB,aACAC,EAIEpB,EAJFoB,SACAC,EAGErB,EAHFqB,OACAC,EAEEtB,EAFFsB,cACAC,EACEvB,EADFuB,aAEF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIhB,EAAoBiB,QAA9B,SAAuC,cACrCnB,GAAWN,IACX,4BACE,0BACE,gBACE0B,IAAG,0CAAqCJ,GACxCK,IAAKT,OAGT,4BACE,0BACG,IACAA,EAAe,KAAC,4BAAM,IAAEC,EAAa,OAAS,QAEjD,yBAAG,eAAaI,EAAa,QAC7B,wBAAI,cACJ,uBAAIH,KACJ,wBAAI,YACJ,uBACGC,GACCA,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAAc,4BAAiB,IAAEA,IAARA,EAAzB,aAKrB,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAML,GAAG,OAAT,SAAgB,aAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,oBAGvB,SAAC,KAAD,MAGL,C","sources":["pages/FilmInfo.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { infoMovieApi } from '../services/getMoviesApi';\n\nconst FilmInfo = () => {\n  const [infoMovie, setInfoMovie] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  // console.log(id);\n\n  useEffect(() => {\n    const getInfoMovieApi = async () => {\n      try {\n        const data = await infoMovieApi(id);\n        setInfoMovie(data);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n        setLoading(false);\n      }\n    };\n\n    getInfoMovieApi();\n  }, [id]);\n  const {\n    original_title,\n    release_date,\n    overview,\n    genres,\n    backdrop_path,\n    vote_average,\n  } = infoMovie;\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}> Go back</Link>\n      {!loading && infoMovie && (\n        <div>\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\n              alt={original_title}\n            />\n          </div>\n          <div>\n            <h1>\n              {' '}\n              {original_title} <span>({release_date})</span>{' '}\n            </h1>\n            <p>User Score: {vote_average} </p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {genres &&\n                genres.map(({ name }) => <span key={name}> {name}</span>)}\n            </p>\n          </div>\n        </div>\n      )}\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\"> Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\"> Reviews </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default FilmInfo;\n"],"names":["useState","infoMovie","setInfoMovie","id","useParams","location","useLocation","loading","setLoading","backLinkLocationRef","useRef","state","from","useEffect","getInfoMovieApi","infoMovieApi","data","console","error","original_title","release_date","overview","genres","backdrop_path","vote_average","to","current","src","alt","map","name"],"sourceRoot":""}