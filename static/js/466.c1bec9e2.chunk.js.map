{"version":3,"file":"static/js/466.c1bec9e2.chunk.js","mappings":"iOAoEA,UA/Da,WACX,OAAkCA,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,MAGAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,sGAEpBN,GAAW,GAFS,UAGGO,EAAAA,EAAAA,IAAaN,GAHhB,gBAGZO,EAHY,EAGZA,KACRV,EAAaU,GACbR,GAAW,GALS,kDAOpBI,EAAS,EAAD,IACRJ,GAAW,GARS,yBAUpBA,GAAW,GAVS,6EAAH,qDAcrBM,GACD,GAAE,CAACL,IAIJ,OACE,2BACGE,IAAS,uBAAG,mCAEZJ,GACC,gBAAKU,UAAU,mBAAf,UACE,SAAC,KAAD,CAAMC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,OAG3Cf,IACE,wBACGA,EAAUgB,KACT,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAcC,EAAtC,EAAsCA,cAAtC,OACE,2BACE,gBACEC,IACEF,EAAY,0CAC2BA,GAnBzD,8EAsBgBG,IAAKF,EACLL,MAAM,WAGR,uBAAIG,KACJ,yBAAG,eAAaD,OAZTb,EADX,QAsBb,C,8LChEKmB,EACJ,sNAEWC,EAAY,mCAAG,6GAEDC,EAAAA,EAAAA,IACrB,iEACA,CACEC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAPP,cAElBM,EAFkB,yBAWjBA,EAASC,MAXQ,sCAalB,IAAIC,MAAJ,6BAbkB,yDAAH,qDAgBZC,EAAe,mCAAG,WAAMC,GAAN,gGAEJR,EAAAA,EAAAA,IACrB,4CACA,CACES,OAAQ,CACNC,MAAOF,EACPG,eAAe,EACfC,SAAU,SAEZX,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAZJ,cAErBM,EAFqB,yBAgBpBA,EAASC,MAhBW,sCAkBrB,IAAIC,MAAJ,6BAlBqB,yDAAH,sDAsBfO,EAAY,mCAAG,WAAMlC,GAAN,gGAEDqB,EAAAA,EAAAA,IAAA,6CACiBrB,GACtC,CACE8B,OAAQ,CACNG,SAAU,SAEZX,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAVP,cAElBM,EAFkB,yBAcjBA,EAASC,MAdQ,sCAgBlB,IAAIC,MAAJ,6BAhBkB,yDAAH,sDAoBZrB,EAAY,mCAAG,WAAMN,GAAN,gGAEDqB,EAAAA,EAAAA,IAAA,6CACiBrB,EADjB,4BAErB,CACEsB,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAPP,cAElBM,EAFkB,yBAWjBA,EAASC,MAXQ,sCAalB,IAAIC,MAAJ,6BAbkB,yDAAH,sDAiBZQ,EAAe,mCAAG,WAAMnC,GAAN,gGAEJqB,EAAAA,EAAAA,IAAA,6CACiBrB,EADjB,4BAErB,CACEsB,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAPJ,cAErBM,EAFqB,yBAWpBA,EAASC,MAXW,sCAarB,IAAIC,MAAJ,6BAbqB,yDAAH,qD","sources":["components/infoFilm/Cast.jsx","services/getMoviesApi.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { castMovieApi } from '../../services/getMoviesApi';\nimport { useParams } from 'react-router-dom';\nimport { Oval } from 'react-loader-spinner';\n\nconst Cast = () => {\n  const [castMovie, setCastMovie] = useState();\n  const [loading, setLoading] = useState(true);\n  const { id } = useParams();\n  const [error, setError] = useState(null);\n\n\n  useEffect(() => {\n    const getCastMovieApi = async () => {\n      try {\n        setLoading(true);\n        const { cast } = await castMovieApi(id);\n        setCastMovie(cast);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCastMovieApi();\n  }, [id]);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      {error && <p>Oops.. Something went wrong...</p>}\n\n      {loading ? (\n        <div className=\"loader-container\">\n          <Oval color=\"#00BFFF\" height={80} width={80} />\n        </div>\n      ) : (\n        castMovie && (\n          <ul>\n            {castMovie.map(\n              ({ id, character, name, profile_path, original_name }) => (\n                <li key={id}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                        : defaultImg\n                    }\n                    alt={original_name}\n                    width=\"100px\"\n                  />\n\n                  <p>{name}</p>\n                  <p> character: {character}</p>\n                </li>\n              )\n            )}\n          </ul>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n// const key = '8634ec4e24971631391084391baa12ea';\nconst key =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NjM0ZWM0ZTI0OTcxNjMxMzkxMDg0MzkxYmFhMTJlYSIsInN1YiI6IjY0OWRlMzNlYzA3MmEyMDEwZGY1NGFiMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ll7H07uCb_HQAjxOXMouSO9cZMVYrxWH6XhbusM7MJI';\n\nexport const getMoviesApi = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\nexport const searchMoviesApi = async searchMovie => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          query: searchMovie,\n          include_adult: false,\n          language: 'en-US',\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const infoMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}`,\n      {\n        params: {\n          language: 'en-US',\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const castMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US'`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const reviewsMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US'`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n"],"names":["useState","castMovie","setCastMovie","loading","setLoading","id","useParams","error","setError","useEffect","getCastMovieApi","castMovieApi","cast","className","color","height","width","map","character","name","profile_path","original_name","src","alt","key","getMoviesApi","axios","headers","accept","Authorization","response","data","Error","searchMoviesApi","searchMovie","params","query","include_adult","language","infoMovieApi","reviewsMovieApi"],"sourceRoot":""}