{"version":3,"file":"static/js/134.014ddb82.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","pages/Movies.jsx","services/getMoviesApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className=\"trendingFilms\">\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {' '}\n            {original_title}{' '}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      original_title: PropTypes.string,\n    })\n  ).isRequired,\n};\n\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesApi } from '../services/getMoviesApi';\nimport { MovieList } from '../components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const query = searchParams.get('query') ?? '';\n\n  const handleSearch = ev => {\n    ev.preventDefault();\n    const value = ev.target.elements.search.value;\n    if (value === '') {\n      return setSearchParams({}); //прибираємо параметр в URL\n    }\n    setSearchParams({ query: ev.target.elements.search.value.trim() });\n\n    ev.target.reset();\n  };\n\n  useEffect(() => {\n    const getSearchMoviesApi = async () => {\n      try {\n        if (query === '') {\n          return;\n        }\n        setIsLoading(true);\n        const { results } = await searchMoviesApi(query);\n        setSearchMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getSearchMoviesApi();\n  }, [query]);\n\n  return (\n    <>\n      <div>Movies</div>\n      <form onSubmit={handleSearch}>\n        <input type=\"text\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Oops.. Something went wrong...</p>}\n      {searchMovies && searchMovies.length > 0 ? (\n        <MovieList movies={searchMovies} />\n      ) : (\n        !isLoading && <p>No movies found</p>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n// const key = '8634ec4e24971631391084391baa12ea';\nconst key =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NjM0ZWM0ZTI0OTcxNjMxMzkxMDg0MzkxYmFhMTJlYSIsInN1YiI6IjY0OWRlMzNlYzA3MmEyMDEwZGY1NGFiMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ll7H07uCb_HQAjxOXMouSO9cZMVYrxWH6XhbusM7MJI';\n\nexport const getMoviesApi = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\nexport const searchMoviesApi = async searchMovie => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          query: searchMovie,\n          include_adult: false,\n          language: 'en-US',\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const infoMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}`,\n      {\n        params: {\n          language: 'en-US',\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const castMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US'`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const reviewsMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US'`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n"],"names":["MovieList","movies","location","useLocation","className","map","original_title","id","to","state","from","useSearchParams","searchParams","setSearchParams","useState","searchMovies","setSearchMovies","error","setError","isLoading","setIsLoading","query","get","useEffect","getSearchMoviesApi","searchMoviesApi","results","onSubmit","ev","preventDefault","target","elements","search","value","trim","reset","type","name","length","key","getMoviesApi","axios","headers","accept","Authorization","response","data","Error","searchMovie","params","include_adult","language","infoMovieApi","castMovieApi","reviewsMovieApi"],"sourceRoot":""}