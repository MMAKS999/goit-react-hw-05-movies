{"version":3,"file":"static/js/884.d771d014.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/getMoviesApi.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { infoMovieApi } from '../services/getMoviesApi';\n\nconst FilmInfo = () => {\n  const [infoMovie, setInfoMovie] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getInfoMovieApi = async () => {\n      try {\n        setIsLoading(true);\n        const data = await infoMovieApi(id);\n        setInfoMovie(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getInfoMovieApi();\n  }, [id]);\n  const {\n    original_title,\n    release_date,\n    overview,\n    genres,\n    backdrop_path,\n    vote_average,\n  } = infoMovie;\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}> Go back</Link>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Oops.. Something went wrong...</p>}\n      {!isLoading && infoMovie && (\n        <div>\n          <div>\n            <img\n              src={\n                backdrop_path\n                  ? `https://image.tmdb.org/t/p/w500/${backdrop_path}`\n                  : defaultImg\n              }\n              width={300}\n              alt={original_title}\n            />\n          </div>\n          <div>\n            <h1>\n              {' '}\n              {original_title} <span>({release_date})</span>{' '}\n            </h1>\n            <p>User Score: {vote_average} </p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {genres &&\n                genres.map(({ name }) => <span key={name}> {name}</span>)}\n            </p>\n          </div>\n        </div>\n      )}\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\"> Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\"> Reviews </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default FilmInfo;\n","import axios from 'axios';\n// const key = '8634ec4e24971631391084391baa12ea';\nconst key =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NjM0ZWM0ZTI0OTcxNjMxMzkxMDg0MzkxYmFhMTJlYSIsInN1YiI6IjY0OWRlMzNlYzA3MmEyMDEwZGY1NGFiMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ll7H07uCb_HQAjxOXMouSO9cZMVYrxWH6XhbusM7MJI';\n\nexport const getMoviesApi = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\nexport const searchMoviesApi = async searchMovie => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          query: searchMovie,\n          include_adult: false,\n          language: 'en-US',\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const infoMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}`,\n      {\n        params: {\n          language: 'en-US',\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const castMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US'`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const reviewsMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US'`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n"],"names":["useState","infoMovie","setInfoMovie","id","useParams","location","useLocation","error","setError","isLoading","setIsLoading","backLinkLocationRef","useRef","state","from","useEffect","getInfoMovieApi","infoMovieApi","data","original_title","release_date","overview","genres","backdrop_path","vote_average","to","current","src","width","alt","map","name","key","getMoviesApi","axios","headers","accept","Authorization","response","Error","searchMoviesApi","searchMovie","params","query","include_adult","language","castMovieApi","reviewsMovieApi"],"sourceRoot":""}