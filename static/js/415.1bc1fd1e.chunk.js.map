{"version":3,"file":"static/js/415.1bc1fd1e.chunk.js","mappings":"oMAGaA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAU,gBAAd,SACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,UACG,IACAI,EAAgB,QAHZC,EADC,KAUjB,C,wGCsBD,UAjCa,WACX,OAAoDI,EAAAA,EAAAA,UAAS,IAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAkBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdF,GAAa,GAFC,UAGYG,EAAAA,EAAAA,MAHZ,gBAGNC,EAHM,EAGNA,QACRR,EAAsBQ,GAJR,gDAMdN,EAAS,EAAD,IANM,yBAQdE,GAAa,GARC,4EAAH,qDAYfE,GACD,GAAE,KAED,iCACE,wBAAI,mBACHH,IAAa,uBAAG,eAChBF,IAAS,uBAAG,kCACZF,EAAmBU,OAAS,IAC3B,SAAC,IAAD,CAAWrB,OAAQW,MAI1B,C,8LCnCKW,EACJ,sNAEWH,EAAY,mCAAG,6GAEDI,EAAAA,EAAAA,IACrB,iEACA,CACEC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYJ,MAPP,cAElBK,EAFkB,yBAWjBA,EAASC,MAXQ,sCAalB,IAAIC,MAAJ,6BAbkB,yDAAH,qDAgBZC,EAAe,mCAAG,WAAMC,GAAN,gGAEJR,EAAAA,EAAAA,IACrB,4CACA,CACES,OAAQ,CACNC,MAAOF,EACPG,eAAe,EACfC,SAAU,SAEZX,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYJ,MAZJ,cAErBK,EAFqB,yBAgBpBA,EAASC,MAhBW,sCAkBrB,IAAIC,MAAJ,6BAlBqB,yDAAH,sDAsBfO,EAAY,mCAAG,WAAM9B,GAAN,gGAEDiB,EAAAA,EAAAA,IAAA,6CACiBjB,GACtC,CACE0B,OAAQ,CACNG,SAAU,SAEZX,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYJ,MAVP,cAElBK,EAFkB,yBAcjBA,EAASC,MAdQ,sCAgBlB,IAAIC,MAAJ,6BAhBkB,yDAAH,sDAoBZQ,EAAY,mCAAG,WAAM/B,GAAN,gGAEDiB,EAAAA,EAAAA,IAAA,6CACiBjB,EADjB,4BAErB,CACEkB,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYJ,MAPP,cAElBK,EAFkB,yBAWjBA,EAASC,MAXQ,sCAalB,IAAIC,MAAJ,6BAbkB,yDAAH,sDAiBZS,EAAe,mCAAG,WAAMhC,GAAN,gGAEJiB,EAAAA,EAAAA,IAAA,6CACiBjB,EADjB,4BAErB,CACEkB,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYJ,MAPJ,cAErBK,EAFqB,yBAWpBA,EAASC,MAXW,sCAarB,IAAIC,MAAJ,6BAbqB,yDAAH,qD","sources":["components/MovieList/MovieList.jsx","pages/Home.jsx","services/getMoviesApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className=\"trendingFilms\">\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {' '}\n            {original_title}{' '}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      original_title: PropTypes.string,\n    })\n  ).isRequired,\n};\n\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getMoviesApi } from '../services/getMoviesApi';\nimport { MovieList } from '../components/MovieList/MovieList';\n\nconst Home = () => {\n  const [filmsTrendingToday, setFilmsTrendingToday] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  //\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await getMoviesApi();\n        setFilmsTrendingToday(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies();\n  }, []);\n  return (\n    <>\n      <h2>Trending today</h2>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Oops.. Somesing went wrong...</p>}\n      {filmsTrendingToday.length > 0 && (\n        <MovieList movies={filmsTrendingToday} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n// const key = '8634ec4e24971631391084391baa12ea';\nconst key =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NjM0ZWM0ZTI0OTcxNjMxMzkxMDg0MzkxYmFhMTJlYSIsInN1YiI6IjY0OWRlMzNlYzA3MmEyMDEwZGY1NGFiMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ll7H07uCb_HQAjxOXMouSO9cZMVYrxWH6XhbusM7MJI';\n\nexport const getMoviesApi = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\nexport const searchMoviesApi = async searchMovie => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          query: searchMovie,\n          include_adult: false,\n          language: 'en-US',\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const infoMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}`,\n      {\n        params: {\n          language: 'en-US',\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const castMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US'`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const reviewsMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US'`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n"],"names":["MovieList","movies","location","useLocation","className","map","original_title","id","to","state","from","useState","filmsTrendingToday","setFilmsTrendingToday","error","setError","isLoading","setIsLoading","useEffect","getMovies","getMoviesApi","results","length","key","axios","headers","accept","Authorization","response","data","Error","searchMoviesApi","searchMovie","params","query","include_adult","language","infoMovieApi","castMovieApi","reviewsMovieApi"],"sourceRoot":""}