{"version":3,"file":"static/js/134.6932e673.chunk.js","mappings":"iOAiEA,UA7De,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAGT,EAAaU,IAAI,gBAApB,QAAgC,GA8B3C,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,kGAET,KAAVH,EAFmB,kEAKGI,EAAAA,EAAAA,IAAgBJ,GALnB,gBAKfK,EALe,EAKfA,QACRV,EAAgBU,GAChBR,GAAW,GAPY,kDASvBS,QAAQC,MAAR,MACAV,GAAW,GAVY,0DAAH,qDAaxBM,GACD,GAAE,CAACH,KAGF,iCACE,yBAAK,YACL,kBAAMQ,SA/BW,SAAAC,GAGnB,GAFAA,EAAGC,iBAEW,KADAD,EAAGE,OAAOC,SAASC,OAAOC,MAEtC,OAAOtB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEQ,MAAOS,EAAGE,OAAOC,SAASC,OAAOC,QAEnDL,EAAGE,OAAOI,OACX,EAsBG,WACE,kBAAOC,KAAK,OAAOC,KAAK,YACxB,mBAAQD,KAAK,SAAb,SAAsB,cAEvBtB,GAAgBA,EAAawB,OAAS,GACrC,eAAIC,UAAU,cAAd,SACGzB,EAAa0B,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OAChB,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAM3B,GAA1C,UACG,IACAuB,EAAgB,QAHZC,EADO,OAUnB1B,IAAW,uBAAG,sBAItB,C","sources":["pages/Movies.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMoviesApi } from '../services/getMoviesApi';\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSearch = ev => {\n    ev.preventDefault();\n    const value = ev.target.elements.search.value;\n    if (value === '') {\n      return setSearchParams({}); //прибираємо параметр в URL\n    }\n    setSearchParams({ query: ev.target.elements.search.value });\n\n    ev.target.reset();\n  };\n\n  useEffect(() => {\n    const getSearchMoviesApi = async () => {\n      try {\n        if (query === '') {\n          return;\n        }\n        const { results } = await searchMoviesApi(query);\n        setSearchMovies(results);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n        setLoading(false);\n      }\n    };\n    getSearchMoviesApi();\n  }, [query]);\n\n  return (\n    <>\n      <div>Movies</div>\n      <form onSubmit={handleSearch}>\n        <input type=\"text\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchMovies && searchMovies.length > 0 ? (\n        <ul className=\"searchFilms\">\n          {searchMovies.map(({ original_title, id }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {' '}\n                {original_title}{' '}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        !loading && <p>No movies found</p>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","searchMovies","setSearchMovies","loading","setLoading","location","useLocation","query","get","useEffect","getSearchMoviesApi","searchMoviesApi","results","console","error","onSubmit","ev","preventDefault","target","elements","search","value","reset","type","name","length","className","map","original_title","id","to","state","from"],"sourceRoot":""}