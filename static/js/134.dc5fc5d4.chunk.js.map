{"version":3,"file":"static/js/134.dc5fc5d4.chunk.js","mappings":"oMAGaA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAU,gBAAd,SACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,UACG,IACAI,EAAgB,QAHZC,EADC,KAUjB,C,iHC8CD,UA1De,WAAO,IAAD,EACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAK,UAAGX,EAAaY,IAAI,gBAApB,QAAgC,GAiC3C,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,kGAET,KAAVH,EAFmB,wDAKvBD,GAAa,GALU,UAMGK,EAAAA,EAAAA,IAAgBJ,GANnB,gBAMfK,EANe,EAMfA,QACRZ,EAAgBY,GAChBV,GAAW,GARY,kDAUvBE,EAAS,EAAD,IACRF,GAAW,GAXY,yBAavBI,GAAa,GAbU,6EAAH,qDAgBxBI,GACD,GAAE,CAACH,KAGF,iCACE,yBAAK,YACL,kBAAMM,SAlCW,SAAAC,GAGnB,GAFAA,EAAGC,iBAEW,KADAD,EAAGE,OAAOC,SAASC,OAAOC,MAEtC,OAAOtB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEU,MAAOO,EAAGE,OAAOC,SAASC,OAAOC,QAEnDL,EAAGE,OAAOI,OACX,EAyBG,WACE,kBAAOC,KAAK,OAAOC,KAAK,YACxB,mBAAQD,KAAK,SAAb,SAAsB,cAEvBhB,IAAa,uBAAG,eAChBF,IAAS,uBAAG,kCACZJ,GAAgBA,EAAawB,OAAS,GACrC,SAAC,IAAD,CAAWtC,OAAQc,KAElBE,IAAW,uBAAG,sBAItB,C","sources":["components/MovieList/MovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  // console.log(movies);\n  return (\n    <ul className=\"trendingFilms\">\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {' '}\n            {original_title}{' '}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesApi } from '../services/getMoviesApi';\nimport { MovieList } from '../components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const query = searchParams.get('query') ?? '';\n\n  const handleSearch = ev => {\n    ev.preventDefault();\n    const value = ev.target.elements.search.value;\n    if (value === '') {\n      return setSearchParams({}); //прибираємо параметр в URL\n    }\n    setSearchParams({ query: ev.target.elements.search.value });\n\n    ev.target.reset();\n  };\n\n  useEffect(() => {\n    const getSearchMoviesApi = async () => {\n      try {\n        if (query === '') {\n          return;\n        }\n        setIsLoading(true);\n        const { results } = await searchMoviesApi(query);\n        setSearchMovies(results);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getSearchMoviesApi();\n  }, [query]);\n\n  return (\n    <>\n      <div>Movies</div>\n      <form onSubmit={handleSearch}>\n        <input type=\"text\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Oops.. Somesing went wrong...</p>}\n      {searchMovies && searchMovies.length > 0 ? (\n        <MovieList movies={searchMovies} />\n      ) : (\n        !loading && <p>No movies found</p>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieList","movies","location","useLocation","className","map","original_title","id","to","state","from","useSearchParams","searchParams","setSearchParams","useState","searchMovies","setSearchMovies","loading","setLoading","error","setError","isLoading","setIsLoading","query","get","useEffect","getSearchMoviesApi","searchMoviesApi","results","onSubmit","ev","preventDefault","target","elements","search","value","reset","type","name","length"],"sourceRoot":""}