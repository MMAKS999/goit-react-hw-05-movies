{"version":3,"file":"static/js/312.1882a01b.chunk.js","mappings":"wNAkDA,UA9CgB,WACd,OAAwCA,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,gHAEGC,EAAAA,EAAAA,IAAgBN,GAFnB,gBAEfO,EAFe,EAEfA,QACRV,EAAgBU,GAChBR,GAAW,GAJY,gDAMvBI,EAAS,EAAD,IACRJ,GAAW,GAPY,yBASvBA,GAAW,GATY,4EAAH,qDAaxBM,GACD,GAAE,CAACL,KAGF,gCACGE,IAAS,uBAAG,oCACXJ,IACA,yBACGF,GAAgBA,EAAaY,QAC5B,wBACGZ,EAAaa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASX,EAApB,EAAoBA,GAApB,OAChB,2BACE,wBAAKU,KACL,yBAAG,IAAEC,OAFEX,EADO,OAQpB,uBAAG,mDAMd,C,8LC9CKY,EACJ,sNAEWC,EAAY,mCAAG,6GAEDC,EAAAA,EAAAA,IACrB,iEACA,CACEC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAPP,cAElBM,EAFkB,yBAWjBA,EAASC,MAXQ,sCAalB,IAAIC,MAAJ,6BAbkB,yDAAH,qDAgBZC,EAAe,mCAAG,WAAMC,GAAN,gGAEJR,EAAAA,EAAAA,IACrB,4CACA,CACES,OAAQ,CACNC,MAAOF,EACPG,eAAe,EACfC,SAAU,SAEZX,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAZJ,cAErBM,EAFqB,yBAgBpBA,EAASC,MAhBW,sCAkBrB,IAAIC,MAAJ,6BAlBqB,yDAAH,sDAsBfO,EAAY,mCAAG,WAAM3B,GAAN,gGAEDc,EAAAA,EAAAA,IAAA,6CACiBd,GACtC,CACEuB,OAAQ,CACNG,SAAU,SAEZX,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAVP,cAElBM,EAFkB,yBAcjBA,EAASC,MAdQ,sCAgBlB,IAAIC,MAAJ,6BAhBkB,yDAAH,sDAoBZQ,EAAY,mCAAG,WAAM5B,GAAN,gGAEDc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,4BAErB,CACEe,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAPP,cAElBM,EAFkB,yBAWjBA,EAASC,MAXQ,sCAalB,IAAIC,MAAJ,6BAbkB,yDAAH,sDAiBZd,EAAe,mCAAG,WAAMN,GAAN,gGAEJc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,4BAErB,CACEe,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAPJ,cAErBM,EAFqB,yBAWpBA,EAASC,MAXW,sCAarB,IAAIC,MAAJ,6BAbqB,yDAAH,qD","sources":["components/infoFilm/Reviews.jsx","services/getMoviesApi.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { reviewsMovieApi } from '../../services/getMoviesApi';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviewsMovie, setReviewsMovie] = useState();\n  const [loading, setLoading] = useState(true);\n  const { id } = useParams();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getReviewsMovieApi = async () => {\n      try {\n        const { results } = await reviewsMovieApi(id);\n        setReviewsMovie(results);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getReviewsMovieApi();\n  }, [id]);\n\n  return (\n    <>\n      {error && <p>Oops.. Something went wrong...</p>}\n      {!loading && (\n        <div>\n          {reviewsMovie && reviewsMovie.length ? (\n            <ul>\n              {reviewsMovie.map(({ author, content, id }) => (\n                <li key={id}>\n                  <h3>{author}</h3>\n                  <p> {content}</p>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p> We don't have any reviews for this movie </p>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n// const key = '8634ec4e24971631391084391baa12ea';\nconst key =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NjM0ZWM0ZTI0OTcxNjMxMzkxMDg0MzkxYmFhMTJlYSIsInN1YiI6IjY0OWRlMzNlYzA3MmEyMDEwZGY1NGFiMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ll7H07uCb_HQAjxOXMouSO9cZMVYrxWH6XhbusM7MJI';\n\nexport const getMoviesApi = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\nexport const searchMoviesApi = async searchMovie => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          query: searchMovie,\n          include_adult: false,\n          language: 'en-US',\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const infoMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}`,\n      {\n        params: {\n          language: 'en-US',\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const castMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US'`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n\nexport const reviewsMovieApi = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US'`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${key}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(`No information on request`);\n  }\n};\n"],"names":["useState","reviewsMovie","setReviewsMovie","loading","setLoading","id","useParams","error","setError","useEffect","getReviewsMovieApi","reviewsMovieApi","results","length","map","author","content","key","getMoviesApi","axios","headers","accept","Authorization","response","data","Error","searchMoviesApi","searchMovie","params","query","include_adult","language","infoMovieApi","castMovieApi"],"sourceRoot":""}