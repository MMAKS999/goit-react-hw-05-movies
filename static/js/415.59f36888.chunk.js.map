{"version":3,"file":"static/js/415.59f36888.chunk.js","mappings":"oMAGaA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAU,gBAAd,SACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,UACG,IACAI,EAAgB,QAHZC,EADC,KAUjB,C,yGCqBD,UAjCa,WACX,OAAoDI,EAAAA,EAAAA,UAAS,IAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAkBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdF,GAAa,GAFC,UAGYG,EAAAA,EAAAA,MAHZ,gBAGNC,EAHM,EAGNA,QACRR,EAAsBQ,GAJR,gDAMdN,EAAS,EAAD,IANM,yBAQdE,GAAa,GARC,4EAAH,qDAYfE,GACD,GAAE,KAED,iCACE,wBAAI,mBACHH,IAAa,uBAAG,eAChBF,IAAS,uBAAG,kCACZF,EAAmBU,OAAS,IAC3B,SAAC,IAAD,CAAWrB,OAAQW,MAI1B,C","sources":["components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  // console.log(movies);\n  return (\n    <ul className=\"trendingFilms\">\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {' '}\n            {original_title}{' '}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getMoviesApi } from '../services/getMoviesApi';\nimport { MovieList } from '../components/MovieList/MovieList';\n\nconst Home = () => {\n  const [filmsTrendingToday, setFilmsTrendingToday] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  // \n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await getMoviesApi();\n        setFilmsTrendingToday(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies();\n  }, []);\n  return (\n    <>\n      <h2>Trending today</h2>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Oops.. Somesing went wrong...</p>}\n      {filmsTrendingToday.length > 0 && (\n        <MovieList movies={filmsTrendingToday} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["MovieList","movies","location","useLocation","className","map","original_title","id","to","state","from","useState","filmsTrendingToday","setFilmsTrendingToday","error","setError","isLoading","setIsLoading","useEffect","getMovies","getMoviesApi","results","length"],"sourceRoot":""}